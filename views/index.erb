<html>

<head>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.js"></script>
  <script src="/js/socket.io.js"></script>
  <style type="text/css">
    label, span { width: 9em; }
    #count { font-size: 72pt; }
    #no-performance-api { display: none; }
  </style>
</head>

<body>
  <%#
    <embed id="a880" src="/sounds/a_880.mp3" autostart=false width=44 height=44 enablejavascript="true" />
    <embed id="a440" src="/sounds/a_440.mp3" autostart=false width=44 height=44 enablejavascript="true" />
  %>

  <p class="error" id="no-performance-api">
    Error: this browser does not support the javascript `performance.timing`
    API.
  </p>

  <p>
    <label>Offset:</label>
    <span id="offset"></span>
  </p>

  <p>
    <label>Server time:</label>
    <span id="serverTime"></span>
  </p>

  <p>
    <label>Beat:</label>
    <span id="beat"></span>
  </p>

  <script>
    function getOffset() {
      var serverTime     = <%= Time.now.to_f.to_s %>;
      var clientTime     = (new Date).getTime() / 1000.0;
      var requestStart   = performance.timing.requestStart / 1000.0;
      var domInteractive = performance.timing.domInteractive / 1000.0;
      var loadDelay      = domInteractive - requestStart;
      return clientTime - serverTime - loadDelay;
    }

    // Orchestrate all this stuff on page load
    $(document).ready(function() {
      // Retrieve these from the server
      var tempo           = 96.0; // beats per minute
      var beatsPerMeasure = 4;
      var startTime       = <%= Time.parse('2014-01-01 12:00:00 UTC').to_f.to_s %> // in UTC with milliseconds

      if (!window.performance || !window.performance.timing) {
        $('#no-performance-api').show();
      }

      // Set up the offset
      var offset = getOffset();
      $('#offset').text(offset);

      // Display changing serverTime to the user
      function getServerTime() {
        return (new Date).getTime() / 1000.0 + offset;
      };
      setInterval(function() {
        $('#serverTime').text(getServerTime(offset));
      }, 30);

      // Display beat to the user
      function getBeatsSinceStart() {
        var timeDiffInSeconds = getServerTime() - startTime;
        // how many beats in timeDiffInSeconds:
        // ====================================
        // n seconds   1 minute     96 beats   m beats
        //           * --------   * -------- = 
        //             60 seconds   1 minute
        var beats = timeDiffInSeconds / 60.0 * tempo;
        return beats;
      };
      function getBeat() {
        return Math.round(getBeatsSinceStart()) % beatsPerMeasure + 1;
      };
      setInterval(function() {
        $('#beat').text(getBeat());
      }, 30);
    });
  </script>
</body>

</html>

